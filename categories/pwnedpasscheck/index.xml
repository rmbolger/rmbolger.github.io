<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PwnedPassCheck on Adventures in Tech</title>
    <link>https://www.dvolve.net/categories/pwnedpasscheck/</link>
    <description>Recent content in PwnedPassCheck on Adventures in Tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dvolve.net/categories/pwnedpasscheck/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auditing Active Directory Passwords With PwnedPassCheck</title>
      <link>https://www.dvolve.net/blog/2019/08/auditing-active-directory-passwords-with-pwnedpasscheck/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.dvolve.net/blog/2019/08/auditing-active-directory-passwords-with-pwnedpasscheck/</guid>
      <description>In a previous post, I introduced a new PowerShell module called PwnedPassCheck. It can be used to check passwords and hashes against a list of over half a billion compromised passwords exposed in data breaches thanks to Troy Hunt&amp;rsquo;s incredibly useful haveibeenpwned.com. In this post, I&amp;rsquo;ll demonstrate how to use the module in conjunction with Michael Grafnetter&amp;rsquo;s amazing DSInternals module to quickly audit existing passwords in Active Directory against the compromised list.</description>
    </item>
    
    <item>
      <title>New Module: PwnedPassCheck</title>
      <link>https://www.dvolve.net/blog/2019/08/new-module-pwnedpasscheck/</link>
      <pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.dvolve.net/blog/2019/08/new-module-pwnedpasscheck/</guid>
      <description>Troy Hunt&amp;rsquo;s incredibly useful haveibeenpwned.com is a great way to check whether your email address and other personal information was exposed in a data breach. But it also allows you to separately check if a specific password was exposed in a breach. As of version 5, the data set contains over half a billion compromised passwords and the number of times they&amp;rsquo;ve been seen in data breaches. My PwnedPassCheck module lets you query that data easily via PowerShell.</description>
    </item>
    
  </channel>
</rss>
